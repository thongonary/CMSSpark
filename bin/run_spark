#!/bin/sh
# Author: Valentin Kuznetsov <vkuznet AT gmail [DOT] com>
# A wrapper script to submit spark job with CMSSpark python script.

# test arguments
if [ "$#" -eq 0 ]; then
    echo "Usage: run_spark <cmsspark_script> <options>"
    exit 1
fi

# find out where CMSSpark is installed on a system
droot=`python -c "import CMSSpark; print '/'.join(CMSSpark.__file__.split('/')[:-1])"`
cmsspark=$droot/$1

# enable simple secret to run in non-yarn mode
conf="--conf spark.authenticate.secret=cmsspark --conf spark.yarn.security.tokens.hive.enabled=false"

# look if we requested to show full log output, to disable spark output
# client should setup his/her own log4j.properties via WMA_LOG4J environment variable
if [[ "$@" =~ "--no-log4j" ]]; then
    conf=" --conf spark.ui.showConsoleProgress=false "
    if [ -n "$LOG4J_CONF" ] && [ -f $LOG4J_CONF ]; then
        conf="$conf --conf spark.driver.extraJavaOptions='-Dlog4j.configuration=file:$LOG4J_CONF'"
    fi
fi

# from https://cern.service-now.com/service-portal/view-request.do?n=RQF0876659
# we can specify in jar files as following (before Spark 2.0):
# --packages com.databricks:spark-csv_2.11:1.6.0

# set avro jars
csvjar=/afs/cern.ch/user/v/valya/public/spark/spark-csv-assembly-1.4.0.jar
avrojar=/afs/cern.ch/user/v/valya/public/spark/avro-mapred-1.7.6-cdh5.7.6.jar
sparkexjar=`ls /usr/lib/spark/examples/lib/spark-examples* | tail -1`

args="${@:2}"
echo "$cmsspark $args"
yarn=`echo $args | grep -- "--yarn"`

# determine if we can load CVMFS
# https://cern.service-now.com/service-portal/article.do?n=KB0005361
cvmfs=""
ctest=`echo $args | grep -- "--cvmfs"`
if [ -n "$ctest" ]; then
if [ -f /cvmfs/sft.cern.ch/lcg/views/LCG_93/x86_64-centos7-gcc62-opt/setup.sh ] && \
   [ -f /cvmfs/sft.cern.ch/lcg/etc/hadoop-confext/hadoop-setconf.sh ]; then
    echo "Enable CVMFS ..."
    source /cvmfs/sft.cern.ch/lcg/views/LCG_93/x86_64-centos7-gcc62-opt/setup.sh
    source /cvmfs/sft.cern.ch/lcg/etc/hadoop-confext/hadoop-setconf.sh analytix
    cvmfs="true"
fi
fi

if [ "$2" == "-h" ] || [ "$2" == "--help" ] || [ "$2" == "-help" ]; then
    # run help
    python $cmsspark --help
    exit 0
fi
echo "PYTHONPATH: $PYTHONPATH"
echo "cmsspark: $cmsspark $args"
if [ -n "$yarn" ]; then
    # to tune up these numbers:
    #  - executor-memory not more than 5G
    #  - num-executor can be increased (suggested not more than 10)
    #  - cores = 2/4/8
    # Temp solution to have a wrapper for python27 on spark cluster
    # once CERN IT will resolve python version we can remove PYSPARK_PYTHON
    echo "YARN execution: $conf"
    if [ "$cvmfs" == "true" ]; then
        spark-submit --jars $csvjar,$avrojar,$sparkexjar \
            --master yarn \
            --executor-memory 5g \
            --driver-class-path '/usr/lib/hive/lib/*' \
            --driver-java-options '-Dspark.executor.extraClassPath=/usr/lib/hive/lib/*' \
            --conf spark.pyspark.python=/cvmfs/sft.cern.ch/lcg/views/LCG_93/x86_64-centos7-gcc62-opt/bin/python \
            --conf spark.driver.extraClassPath='/usr/lib/hadoop-mapreduce/hadoop-mapreduce-client-core-2.6.0-cdh5.7.6.jar' \
            --conf spark.executorEnv.LD_LIBRARY_PATH=$LD_LIBRARY_PATH \
            $conf $cmsspark $args
    else
        spark-submit --jars $csvjar,$avrojar,$sparkexjar \
            --master yarn \
            --executor-memory 5g \
            --driver-class-path '/usr/lib/hive/lib/*' \
            --driver-java-options '-Dspark.executor.extraClassPath=/usr/lib/hive/lib/*' \
            $conf $cmsspark $args
    fi
else
    # submit spark job with our file, please note
    # that user may increase memory options if necessary
    # the executor and driver memory options can be given in human readable form
    # while spark yarn option should use memoryOverhead as KB value.

    # Modify with local[*] to use all the available cores in the node
    #   optionally increase driver memory with --driver-memory 2G (default 1G)
    echo "LOCAL (NO-YARN) execution"
    if [ "$cvmfs" == "true" ]; then
        spark-submit --jars $csvjar,$avrojar,$sparkexjar \
            --executor-memory $((`nproc`/4))G \
            --master local[$((`nproc`/4))] \
            --driver-class-path '/usr/lib/hive/lib/*' \
            --driver-java-options '-Dspark.executor.extraClassPath=/usr/lib/hive/lib/*' \
            --conf spark.pyspark.python=/cvmfs/sft.cern.ch/lcg/views/LCG_93/x86_64-centos7-gcc62-opt/bin/python \
            --conf spark.driver.extraClassPath='/usr/lib/hadoop-mapreduce/hadoop-mapreduce-client-core-2.6.0-cdh5.7.6.jar' \
            --conf spark.executorEnv.LD_LIBRARY_PATH=$LD_LIBRARY_PATH \
            $conf $cmsspark $args
    else
        spark-submit --jars $csvjar,$avrojar,$sparkexjar \
            --executor-memory $((`nproc`/4))G \
            --master local[$((`nproc`/4))] \
            --driver-class-path '/usr/lib/hive/lib/*' \
            --driver-java-options '-Dspark.executor.extraClassPath=/usr/lib/hive/lib/*' \
            $conf $cmsspark $args
    fi
fi
